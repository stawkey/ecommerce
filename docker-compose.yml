services:
    mongo:
        image: mongo:6
        container_name: mongo-db
        ports:
            - "27017:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: example
            MONGO_INITDB_DATABASE: leyndell
        volumes:
            - ./backend/init/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
            - mongo-data:/data/db
        healthcheck:
            test: mongosh --eval "db.adminCommand('ping')" --quiet
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 15s
        networks:
            - app-network
        restart: always

    backend:
        build: ./backend
        ports:
            - "8000:8000"
        depends_on:
            mongo:
                condition: service_healthy
        environment:
            - DB_URI=mongodb://admin:example@mongo:27017/leyndell?authSource=admin
            - PORT=8000
            - SECRET_KEY=8015129cac4807da2f1e63a3c9624de8addc1e1643a95c92b91f09d4a98ce33e
        volumes:
            - ./backend:/app
            - /app/node_modules
        networks:
            - app-network
        restart: on-failure
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    frontend:
        build: ./frontend
        ports:
            - "5173:5173"
        depends_on:
            - backend
        volumes:
            - ./frontend:/app
            - /app/node_modules
        networks:
            - app-network
        restart: always

volumes:
    mongo-data:

networks:
    app-network:
        driver: bridge
